# 'Depends' 필드를 사용하여 Task의 출력 메시지가 아닌, 성공/실패 등의 Status에 따라 특정 Task의 실행 여부를 결정할 수도 있다. 
# 이때 다른 Task에 의존성이 있지 않은 경우, 'dependencies' 필드는 생략 가능하다. 
# 아래 예시와 같이 'when' 필드와 조합하여, 더욱 정교한 Workflow를 정의할 수 있다.



apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: wf-depends
spec:
  entrypoint: dag-template
  arguments:
    parameters:
    - name: messageA
      value: A
    - name: messageB
      value: B

  templates:
  - name: dag-template
    inputs:
      parameters:
      - name: messageA
      - name: messageB

# TaskA: Task1의 상태가 'Succeeded'(성공)이고, 메시지가 'A'인 경우 실행
# TaskB: Task1의 상태가 'Succeeded'(성공)이고, 메시지가 'B'인 경우 실행
# TaskC: TaskA가 성공하면 실행
# TaskC2: TaskB를 생략한 경우 실행
# TaskD: TaskA를 생략한 경우 실행
# TaskD2: TaskB가 성공한 경우 실행

# 'depends' 필드에서 사용할 수 있는 Task의 Status는 아래와 같다. (https://cwal.tistory.com/70?category=951157)

    dag:
      tasks:
      - name: Task1
        arguments:
          parameters: [{name: text, value: "{{inputs.parameters.messageA}}" }]
        template: task-decision
      - name: TaskA
        template: task-A
        depends: Task1.Succeeded
        when: "{{tasks.Task1.outputs.result}} == A"
      - name: TaskB
        template: task-B
        depends: Task1.Succeeded
        when: "{{tasks.Task1.outputs.result}} == B"
      - name: TaskC
        template: task-C
        depends: TaskA.Succeeded
      - name: TaskD
        template: task-D
        depends: TaskA.Skipped
      - name: TaskD2
        template: task-D
        depends: TaskB.Succeeded
      - name: TaskC2
        template: task-C
        depends: TaskB.Skipped
      
  - name: task-decision
    inputs:
      parameters:
      - name: text
    script:
      image: python:3.8-slim
      command: [python]
      source: |
        p = "{{inputs.parameters.text}}"
        print(p)

  - name: task-A
    script:
      image: python:3.8-slim
      command: [python]
      source: |
        print("Task A was executed.")

  - name: task-B
    script:
      image: python:3.8-slim
      command: [python]
      source: |
        print("Task B was executed.")

  - name: task-C
    script:
      image: python:3.8-slim
      command: [python]
      source: |
        print("Task B was executed.")
  
  - name: task-D
    script:
      image: python:3.8-slim
      command: [python]
      source: |
        print("Task B was executed.")